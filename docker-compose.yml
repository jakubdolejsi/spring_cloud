version: '3'

services:
  user-service:
    image: maven:3-openjdk-15-slim
    container_name: user-service
    expose:
      - 8082
    #      - 5005:5005
    volumes:
      - ./user-service:/user-service
    working_dir: /user-service
    command: ['mvn', 'spring-boot:run']
    depends_on:
      - kafka1
      - registry
    environment:
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://registry:8761/eureka

  project-service:
    image: maven:3-openjdk-15-slim
    container_name: project-service
    expose:
      - 8083
    #      - 5005:5005
    volumes:
      - ./project-service:/project-service
    working_dir: /project-service
    command: ['mvn', 'spring-boot:run']
    depends_on:
      - kafka1
      - registry
    environment:
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://registry:8761/eureka

  zookeeper:
    image: zookeeper:3.4.9
    container_name: zookeeper
    hostname: zookeeper
    expose:
      - 2181
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888 # list of deploying zoo servers
    volumes:
      - ./kafka/data/zookeeper/data:/data
      - ./kafka/data/zookeeper/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    container_name: kafka1
    hostname: kafka1
    expose:
      - 9091
    environment:
      #      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      #      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19091,PLAINTEXT_HOST://localhost:9091
      #      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/data/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: 'no'
    expose:
      - 9000
    environment:
      KAFKA_BROKERCONNECT: 'kafka1:19091'
    depends_on:
      - kafka1
      # - kafka2
      # - kafka3


  registry:
    image: maven:3-openjdk-15-slim
    container_name: registry
    expose:
      - '8761'
    volumes:
      - ./registry:/registry
    working_dir: /registry
    command: ['mvn', 'spring-boot:run']

  gateway:
    image: maven:3-openjdk-15-slim
    container_name: gateway
    ports:
      - '127.0.0.1:8080:8760'
    depends_on:
      - registry
    #      - user-service
    #      - project-service
    environment:
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://registry:8761/eureka
    volumes:
      - ./api-gateway:/api-gateway
    working_dir: /api-gateway
    command: ['mvn', 'spring-boot:run']

  # dummy-service:
  #   image: maven:3-openjdk-15-slim
  #   expose:
  #     - 8084
  #   #      - 5005:5005
  #   volumes:
  #     - ./dummy-service:/dummy-service
  #   working_dir: /dummy-service
  #   command: ['mvn', 'spring-boot:run']
  #   depends_on:
  #     - registry
  #     - gateway
  #   environment:
  #     - JAVA_OPTS=
  #       -DEUREKA_SERVER=http://registry:8761/eureka
